/*–†–£–ö–û–í–û–î–°–¢–í–û –ü–û GULP

>> –ù–ê–°–¢–†–û–ô–ö–ê –ù–û–í–û–ì–û –ü–†–û–ï–ö–¢–ê

1. –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
2. –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É ( npm i ) - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –º–æ–¥—É–ª–∏
3. –í —Ñ–∞–π–ª–µ gulpfile.js —Å–¥–µ–ª–∞—Ç—å "–ë–ê–ó–û–í–£–Æ –ù–ê–°–¢–†–û–ô–ö–£"
- –®–∞–≥ 1. –í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä scss || less
- –®–∞–≥ 2. –ù–∞–∑–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç, –∫–∞–∫ –≤ hg
- –®–∞–≥ 3. –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É ( gulp custom-gulpfile ) - —Å–æ–∑–¥–∞—Å—Ç —Ñ–∞–π–ª —Å –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ú–ò –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò
- –®–∞–≥ 4. –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É ( gulp new-project ) - —É–¥–∞–ª–∏—Ç –ø–∞–ø–∫—É —Å–æ —Å—Ç–∏–ª—è–º–∏, —Ç.–µ –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ SASS, —Ç–æ —É–¥–∞–ª–∏—Ç –ø–∞–ø–∫—É LESS –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç
4. –í —Ñ–∞–π–ª–µ custom-gulpfile.js —Å–¥–µ–ª–∞—Ç—å "–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–£–Æ –ù–ê–°–¢–†–û–ô–ö–£"
5. –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É ( gulp ) - –∑–∞–ø—É—Å—Ç–∏—Ç –ø—Ä–æ–µ–∫—Ç
6. –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç - localhost:3000 (–≤–≤–µ—Å—Ç–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)


>> –ó–ê–ü–£–°–ö –ü–†–û–ï–ö–¢–ê (—Ä–∞–Ω–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ)

1. –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
2. –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É ( gulp custom-gulpfile ) - —Å–æ–∑–¥–∞—Å—Ç custom-gulpfile.js
3. –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É ( gulp ) - –∑–∞–ø—É—Å—Ç–∏—Ç –ø—Ä–æ–µ–∫—Ç
4. –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç - localhost:3000 (–≤–≤–µ—Å—Ç–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
*/

'use strict';

// –ë–ê–ó–û–í–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–ï–ö–¢–ê
// 1. scss || less
var preprocessor = 'scss';

// 2. –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∫–∞–∫ –≤ hg
var nameProject = 'blackbox-ufo';

// 3. –°–æ–∑–¥–∞—Ç—å custom-gulpfile.js
// gulp custom-gulpfile

// 4. –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –ù–û–í–´–ô –ü–†–û–ï–ö–¢
// gulp new-project


// ------------------------- //
// –≠–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
const fs = require('fs');

let gulp = require('gulp'),
	browserSync = require('browser-sync'),
	watch = require('gulp-watch'),
	sass = require('gulp-sass')(require('sass')),
	less = require('gulp-less'),
	autoprefixer = require('gulp-autoprefixer'),
	rename = require('gulp-rename'),
	concat = require('gulp-concat'),
	gulpif = require('gulp-if'),
	del = require('del'),
	plumber = require('gulp-plumber'),
	touch = require('gulp-touch-cmd'),
	notify = require("gulp-notify"),
	csso = require('gulp-csso'),
	babel = require('gulp-babel'),
	uglify = require('gulp-uglify'),
	ftp = require('vinyl-ftp'),
	zip = require('gulp-zip');



let customFilePath = "./custom-gulpfile.js";	// –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
let styleFiles = ['styles', 'tinymce'];			// —Ñ–∞–π–ª—ã —Å—Ç–∏–ª–µ–π –¥–ª—è –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏
let scriptFiles = ['cart', 'product-show'];		// —Ñ–∞–π–ª—ã js –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏

if (fs.existsSync(customFilePath)) {
	var customGulpfile = require(customFilePath);
} else {
	customGulpfile = {
		watchFiles: ["views/**/**/**/*.+(html|htm)"], // –§–ê–ô–õ–´ –ó–ê –ö–û–¢–û–†–´–ú–ò –ù–£–ñ–ù–û –°–õ–ï–î–ò–¢–¨ (–¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
		styleHotReload: false, 	// –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ò–õ–ï–ô
		tasks: function () { return false; }
	}
}

// –£–¥–∞–ª—è–µ—Ç –Ω–µ–Ω—É–∂–Ω—É—é –ø–∞–ø–∫—É —Å—Ç–∏–ª–µ–π
gulp.task('new-project', function (done) {
	let del_preprocessor = "";
	if (preprocessor == 'scss') {
		del_preprocessor = 'less';
	}
	else {
		del_preprocessor = 'scss';
	};

	del.sync(['resources/' + del_preprocessor]);

	done();
});

// –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
gulp.task('browser-sync-start', function (done) {

	browserSync.init({
		proxy: "http://" + nameProject + ".web",
		notify: true,
		open: false
	});

	done();
});

gulp.task('browser-sync-reload', function () {
	browserSync.reload();
});

// —Å–ª–µ–∂–µ–Ω–∏–µ –∑–∞ —Ñ–∞–π–ª–∞–º–∏
gulp.task('watch-files', function () {

	if (customGulpfile.styleHotReload) {
		gulp.watch(customGulpfile.watchFiles, gulp.parallel('browser-sync-reload'));
	}

	gulp.watch('resources/' + preprocessor + '/**/**/*.' + preprocessor, gulp.parallel('style'));
	gulp.watch('resources/js/*.js', gulp.parallel('scripts'));
});


// –¢–ê–ë–õ–ò–¶–´ –°–¢–ò–õ–ï–ô SASS/LESS
gulp.task('style', function () {
	styleFiles.forEach(function (styleFile, n, styleFiles) {
		gulp.src(['resources/' + preprocessor + "/" + styleFile + "." + preprocessor])
			.pipe(plumber({ errorHandler: notify.onError("Error: <%= error.message %>") }))
			.pipe(gulpif(preprocessor == 'scss', sass(), less()))
			.pipe(rename({ dirname: '' }))
			.pipe(concat(styleFile + '.css'))
			.pipe(autoprefixer({
				browsers: ['last 10 versions'],
				cascade: true
			}))
			.pipe(csso())
			.pipe(gulp.dest('resources/dist'))
			.pipe(browserSync.reload({ stream: true }))
			.pipe(touch())
	});
	gulp.watch('resources/' + preprocessor + '/**/**/*.' + preprocessor, gulp.parallel(['style']));
});


// SCRIPTS
gulp.task('scripts', done => {

	let pathJsFiles = 'resources/js/';
	let ignoreFiles = [];

	scriptFiles.forEach(script => {
		let ignoreFile = '!' + pathJsFiles + script + '.js';
		ignoreFiles.push(ignoreFile);
	})

	gulp.src(['resources/js/*.js', ...ignoreFiles])
		.pipe(concat('common.min.js'))
		.pipe(uglify())
		.pipe(gulp.dest('resources/dist'))
		.pipe(browserSync.reload({ stream: true }))



	scriptFiles.forEach(function (scriptFile, n, scriptFiles) {
		gulp.src([pathJsFiles + scriptFile + ".js"])
			.pipe(concat(scriptFile + '.min.js'))
			.pipe(uglify())
			.pipe(gulp.dest('resources/dist'))
			.pipe(browserSync.reload({ stream: true }))
	});

	done();
})

// —Å–æ–∑–¥–∞–Ω–∏–µ custom gulpfiles
var templateCastomGulpfile =
	`module.exports = {

	// –§–ê–ô–õ–´ –ó–ê –ö–û–¢–û–†–´–ú–ò –ù–£–ñ–ù–û –°–õ–ï–î–ò–¢–¨ (–¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
	watchFiles: ["views/**/**/**/*.+(html|htm)"],
	
	// –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ò–õ–ï–ô
	styleHotReload: false,
	
	tasks: function(){
		//var gulp = require('gulp');
		//gulp.task('custom-task',function(){});
		//gulp.start('custom-task');
		return false;
	}
};`;

gulp.task('custom-gulpfile', function (done) {
	fs.writeFile(customFilePath, templateCastomGulpfile, function (err) {
		if (err) {
			return console.log(err);
		}
		console.log("–§–∞–π–ª " + customFilePath + " —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!");
	});
	done();
});


// –î–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ç–∞—Å–∫
gulp.task('default', gulp.parallel('browser-sync-start', 'style', 'scripts', 'watch-files'), function () {
	return true;
});




// DEPLOY

// BUILD
gulp.task('build', () => {

	const ignoredFiles = [
		'.DS_Store',
		'ftp.example',
		'ftp.js',
		'humans.txt',
		'.git',
		'config/**',
		'dist/**',
		'logs/**',
		'node_modules/**',
		'resources/scss/**',
		'resources/js/**',
		'resources/fonts/**',
		'temp/**',
		'uploaded/**',
		'.gitignore',
		'composer.json',
		'composer.lock',
		'custom-gulpfile.js',
		'gulpfile.js',
		'package-lock.json',
		'package.json',
		'ftp.example'
	]

	return gulp.src(['.*', '*', '*/**'], { base: './', ignore: ignoredFiles })
		.pipe(zip('build.zip'))
		.pipe(gulp.dest('./dist'))
		.on('end', () => console.log('üëå –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω'));
});


// FTP
gulp.task('ftp', () => {

	let ftpConfig = require('./ftp.js')

	function getConn() {
		console.log("üåç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É");
		return ftp.create({ ...ftpConfig });
	}

	const conn = getConn()

	return gulp.src(['./dist/build.zip'], { buffer: false, dot: true })
		.pipe(conn.dest('./www/bb65.ru/'))
		.on('end', () => console.log('üëå –§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä'));
});

// RUN DEPLOY
gulp.task('deploy', gulp.series('build', 'ftp'), function () {
	return true;
})


