'use strict'

document.addEventListener('DOMContentLoaded', function () {
	// SLIDERS

	// главный слайдер
	new Swiper('.main-slider', {
		loop: true,
		effect: 'fade',
		fadeEffect: {
			crossFade: true,
		},
		autoplay: {
			delay: 5000,
			disableOnInteraction: false,
		},
	})

	// новинки
	new Swiper('.new-products .products-slider', {
		loop: true,
		slidesPerView: 4,
		spaceBetween: 30,
		// autoplay: {
		// 	delay: 5000,
		// 	disableOnInteraction: false,
		// },
	})

	// главный слайдер
	new Swiper('.main-slider-wrapper', {
		loop: true,
		effect: 'fade',
		autoplay: {
			delay: 5000,
			disableOnInteraction: false,
		},
	})

	// главный слайдер - мобильная версия
	new Swiper('.main-slider-mobile', {
		loop: true,
		effect: 'fade',
		autoplay: {
			delay: 5000,
			disableOnInteraction: false,
		},
	})

	// КНОПКА ВВЕРХ
	// {
	// 	function trackScroll() {
	// 		let scrolled = window.pageYOffset,
	// 			coords = document.documentElement.clientHeight

	// 		if (scrolled > coords) {
	// 			btns.forEach((btn) => btn.classList.add('active'))
	// 		} else {
	// 			btns.forEach((btn) => btn.classList.remove('active'))
	// 		}
	// 	}

	// 	function backToTop() {
	// 		if (window.pageYOffset > 0) window.scrollBy(0, -window.pageYOffset)
	// 	}

	// 	window.addEventListener('scroll', trackScroll)

	// 	let btns = document.querySelectorAll('.btn-up-page')
	// 	btns.forEach((btn) => btn.addEventListener('click', backToTop))
	// }

	// товары
	function productsSliders() {
		let defaultSliderSettings = {
			autoplay: {
				delay: 2500,
				disableOnInteraction: false,
			},

			navigation: {
				nextEl: null,
				prevEl: null,
			},

			loop: true,
		}

		function initSliders(sliders, settings) {
			sliders.forEach((slider) => {
				let sliderNavArrows = slider.querySelector('.navigation')

				settings.navigation.prevEl = sliderNavArrows.querySelector('.btn-prev')
				settings.navigation.nextEl = sliderNavArrows.querySelector('.btn-next')

				new Swiper(slider, settings)
			})
		}

		let productSlidersTypeGrid = document.querySelectorAll(
				'.block-product-slider__grid'
			),
			productSlidersTypeList = document.querySelectorAll(
				'.block-product-slider__list'
			)

		// type grid
		if (productSlidersTypeGrid) {
			let settings = defaultSliderSettings

			settings.breakpoints = {
				0: {
					slidesPerView: 2.2,
					spaceBetween: 10,
				},
				768: {
					slidesPerView: 4,
					spaceBetween: 20,
				},
				991: {
					slidesPerView: 5,
					spaceBetween: 20,
				},
				1200: {
					slidesPerView: 6,
					spaceBetween: 20,
				},
			}

			initSliders(productSlidersTypeGrid, settings)
		}

		// type list
		if (productSlidersTypeList) {
			let settings = defaultSliderSettings

			settings.breakpoints = {
				0: {
					slidesPerView: 1,
					spaceBetween: 10,
				},
				768: {
					slidesPerView: 2,
					spaceBetween: 20,
				},
				991: {
					slidesPerView: 3,
					spaceBetween: 20,
				},
				1200: {
					slidesPerView: 3,
					spaceBetween: 20,
				},
			}

			initSliders(productSlidersTypeList, settings)
		}
	}

	productsSliders()

	// фирменная упаковка в корзине
	// $('.branded-packaging_slider').not('.slick-initialized').slick({
	// 	slidesToShow: 5,
	// 	slidesToScroll: 5,
	// 	arrows: true,
	// });

	// КАТАЛОГ МЕНЮ (МОБИЛЬНАЯ ВЕРСИЯ)
	function mobileCatalogMenu() {
		let catalogMenu = document.querySelector('.mobile-menu-catalog')

		if (!catalogMenu) {
			return false
		}

		function stateCatalogMenu() {
			document.body.classList.toggle('no-scroll')
			catalogMenu.classList.toggle('active')
			closeSubCategories()
		}

		function stateCategoriesLevel_2() {
			activeCategoriesLevel_2 = this.nextElementSibling

			if (activeCategoriesLevel_2) {
				activeCategoriesLevel_2.classList.add('active')

				let categoriesLevel_2 =
					activeCategoriesLevel_2.querySelectorAll('.category-level-2')

				categoriesLevel_2.forEach((categoryLevel_2) => {
					categoryLevel_2.addEventListener('click', stateCategoriesLevel_3)
				})
			}
		}

		function stateCategoriesLevel_3() {
			activeCategoriesLevel_3.push(this)

			if (activeCategoriesLevel_3) {
				this.classList.toggle('active')
			}
		}

		function closeSubCategories() {
			if (activeCategoriesLevel_2) {
				activeCategoriesLevel_2.classList.remove('active')
				activeCategoriesLevel_2 = null
			}

			if (activeCategoriesLevel_3) {
				activeCategoriesLevel_3.forEach((categoryLevel_3) => {
					categoryLevel_3.classList.remove('active')
				})

				activeCategoriesLevel_3.length = 0
			}
		}

		let btnsCatalogMenu = document.querySelectorAll('.btn-catalog-menu-mobile')

		let mainCategories = catalogMenu.querySelectorAll('.main-category_wrapper')

		let activeCategoriesLevel_2 = null
		let activeCategoriesLevel_3 = []
		let linksBackMainCategories = catalogMenu.querySelectorAll('.link-back')

		btnsCatalogMenu.forEach((btn) => {
			btn.addEventListener('click', stateCatalogMenu)
		})

		mainCategories.forEach((mainCategory) => {
			mainCategory.addEventListener('click', stateCategoriesLevel_2)
		})

		linksBackMainCategories.forEach((link) => {
			link.addEventListener('click', closeSubCategories)
		})
	}

	mobileCatalogMenu()

	// НАВИГАЦИЯ (МОБИЛЬНАЯ ВЕРСИЯ)
	function mobileNavigation() {
		const menu = document.querySelector('.mobile-menu')
		const btnMobileMenu = document.querySelector('.btn-mobile-menu')

		if (!btnMobileMenu || !menu) {
			return false
		}

		function stateMenu() {
			document.body.classList.toggle('no-scroll')
			menu.classList.toggle('active')
			btnMobileMenu.classList.toggle('active')
		}

		btnMobileMenu.addEventListener('click', stateMenu)
	}

	mobileNavigation()

	// ВИД СПИСКА ТОВАРОВ
	function viewProductList() {
		let viewProductListBlock = document.querySelector(
			'.catalog-products-sorting .view-mode'
		)

		if (viewProductListBlock) {
			if (!getCookie('viewModeProductsList')) {
				setCookie('viewModeProductsList', 'grid')
			}

			let switches = viewProductListBlock.querySelectorAll('.item'),
				typeProductList = getCookie('viewModeProductsList')

			switches.forEach(function (e) {
				e.addEventListener('click', function () {
					if (
						this.getAttribute('data-type') == 'grid' ||
						this.getAttribute('data-type') == 'list'
					) {
						typeProductList = this.getAttribute('data-type')
					} else {
						typeProductList = 'grid'
					}

					document
						.querySelector('.wrapper-products--default')
						.setAttribute('data-view-list', typeProductList)
					setCookie('viewModeProductsList', typeProductList)

					switches.forEach(function (item) {
						item.classList.remove('active')
					})

					e.classList.add('active')
				})
			})
		}
	}

	viewProductList()

	// ДОБАВИТЬ В КОРЗИНУ
	function productAddToCart() {
		const url = location.pathname
		const page = url.split('/')[2] == 'product' ? 'product' : 'catalog'

		let btns = document.querySelectorAll('.btn-add-cart')
		let products = []

		if (page == 'product') {
			let product = document.querySelector('.catalog-product')
			products.push(product)
		} else {
			products = document.querySelectorAll('.product-card')
		}

		let config = {
			headers: {
				'UFO-AJAX-HANDLER': 'ev{onAddToCart}',
				'UFO-REQUEST': 1,
			},
		}

		let miniCartWrapper = document.getElementById('mini-cart'),
			miniCartMobileWrapper = document.getElementById('mini-cart-mobile')

		if (btns && products) {
			btns.forEach((btn) => {
				btn.addEventListener('click', function () {
					let id = this.getAttribute('data-id'),
						type = this.getAttribute('data-type'),
						quantity = this.getAttribute('data-quantity'),
						id_sku = this.getAttribute('data-id-sku')

					axios
						.post(
							'/shop/',
							{
								id: id,
								type: type,
								quantity: quantity,
								id_sku: id_sku,
							},
							config
						)
						.then((response) => {
							let updatedMiniCart = response.data.response['#mini-cart']
							let updatedMiniCartMobile =
								response.data.response['#mini-cart-mobile']

							if (updatedMiniCart && updatedMiniCartMobile) {
								if (miniCartWrapper) {
									miniCartWrapper.innerHTML = updatedMiniCart
								}

								if (miniCartMobileWrapper) {
									miniCartMobileWrapper.innerHTML = updatedMiniCartMobile
								}

								products.forEach((product) => {
									if (product.getAttribute('data-id') == id) {
										product.classList.add('added')
									}
								})
							}
						})
				})
			})
		}
	}

	productAddToCart()

	// БЛОК БЕСКОНЕЧНЫЙ СПИСОК ТОВАРОВ
	function onInfinityProductsList() {
		let infinityProductsList = document.querySelector('.infinity-products-list')

		if (!infinityProductsList) {
			return
		}

		let btnMore = infinityProductsList.querySelector('.btn-more-products')
		let wrapperProductsList =
			infinityProductsList.querySelector('.wrapper-products')

		let config = {
			headers: {
				'UFO-AJAX-HANDLER': 'ev{onGetRandomProducts}',
				'UFO-REQUEST': 1,
			},
		}

		let products = wrapperProductsList.querySelectorAll('.product-card')
		let ids = []

		if (products) {
			products.forEach((product) => ids.push(product.getAttribute('data-id')))
		}

		btnMore.addEventListener('click', () => {
			axios
				.post(
					'/',
					{
						ids: ids,
					},
					config
				)
				.then((response) => {
					if (!response.data.response) {
						return
					}

					let newProductsIds = response.data.response.newProductsIds,
						newProducts = response.data.response.newProducts

					wrapperProductsList.insertAdjacentHTML('beforeend', newProducts)
					newProductsIds.forEach((id) => ids.push(id))

					productAddToCart()
				})
		})
	}

	onInfinityProductsList()

	function stateTopSectionHeader() {
		const btn = document.querySelector('.btn-state-top-section')

		if (!btn) {
			return false
		}

		const topSection = document.querySelector('.header-section-top')

		btn.addEventListener('click', () => {
			topSection.classList.toggle('active')
			btn.classList.toggle('active')
			btn.setAttribute(
				'title',
				btn.classList.contains('active')
					? 'Скрыть'
					: 'Показать больше информации'
			)
		})
	}

	stateTopSectionHeader()
})

function getCookie(name) {
  let matches = document.cookie.match(new RegExp(
    "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
  ));
  return matches ? decodeURIComponent(matches[1]) : undefined;
}

function setCookie(name, value, options = {}) {

  options = {
    path: '/',
    // при необходимости добавьте другие значения по умолчанию
    ...options
  };

  if (options.expires instanceof Date) {
    options.expires = options.expires.toUTCString();
  }

  let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(value);

  for (let optionKey in options) {
    updatedCookie += "; " + optionKey;
    let optionValue = options[optionKey];
    if (optionValue !== true) {
      updatedCookie += "=" + optionValue;
    }
  }

  document.cookie = updatedCookie;
}

function deleteCookie(name) {
  setCookie(name, "", {
    'max-age': -1
  })
}
// окончание слова в зависимости от количества
function endingWord(words, number){ 
    let result = ((number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? Math.abs(number) % 10 : 5])
    return words[result];
}

document.addEventListener('DOMContentLoaded', function () {
	const btnsModal = document.querySelectorAll('[data-btn-modal]')

	if (!btnsModal) {
		return false
	}

	const modals = document.querySelectorAll('.modal')

	if (modals) {
		modals.forEach((modal) => {
			modal.addEventListener('click', (e) => {
				if (
					e.target.classList.contains('modal') ||
					e.target.classList.contains('btn-close')
				) {
					stateModal(modal.id, false)
				}
			})
		})
	}

	btnsModal.forEach((btn) =>
		btn.addEventListener('click', () =>
			stateModal(btn.getAttribute('data-btn-modal'), true)
		)
	)

	function stateModal(idModal, state) {
		let modal = document.getElementById(idModal)

		if (state) {
			modal.classList.add('active')
			document.body.classList.add('scroll-y-disabled')
		} else {
			modal.classList.remove('active')
			document.body.classList.remove('scroll-y-disabled')
		}
	}
})

document.addEventListener("DOMContentLoaded", function () {

    let localStorageName = 'search-history';

    let widgetSearch = document.querySelector('.widget-search'),
        searchInput = widgetSearch.querySelector('.search-input'),
        btnsSearch = widgetSearch.querySelectorAll('.btn-search'),
        searchResultsWrapper = widgetSearch.querySelector('.widget-search-results');

    // категории
    let sectionCategories = searchResultsWrapper.querySelector('.widget-search-results_categories'),
        categoriesList = sectionCategories.querySelector('.widget-search-results_categories-list');

    // товары
    let sectionProducts = searchResultsWrapper.querySelector('.widget-search-results_products'),
        productsList = sectionProducts.querySelector('.widget-search-results_products-list');

    // история
    let sectionHistory = searchResultsWrapper.querySelector('.widget-search-results_history'),
        historyList = sectionHistory.querySelector('.widget-search-results_history-list');

    // все результаты
    let sectionAllResults = searchResultsWrapper.querySelector('.widget-search-results_all'),
        countCategoriesAllResults = sectionAllResults.querySelector('.all-results_categories'),
        countProductsAllResults = sectionAllResults.querySelector('.all-results_products');


    // ВАЛИДАЦИЯ ЗАПРОСА (УДАЛЕНИЕ СКИПТОВ И Т.Д.)
    function queryValid() {
        let result = searchInput.value;
        result = result.replaceAll(/<[^>]+>/gi, "");
        return result;
    }


    // ОЧИСТИТЬ ПОИСК
    let btnClear = widgetSearch.querySelector('.btn-clear'),
        btnClearStatus = false;


    function clearBtnAllResults() {

        sectionAllResults.classList.remove('active');

        countCategoriesAllResults.classList.remove('active');
        countProductsAllResults.classList.remove('active');

        countCategoriesAllResults.querySelector('span').textContent = ''
        countProductsAllResults.querySelector('span').textContent = ''
    }

    function clearSearch() {
        searchInput.value = "";

        if (sectionCategories.classList.contains('active')) {
            sectionCategories.classList.remove('active');
            categoriesList.innerHTML = '';
        }

        if (sectionProducts.classList.contains('active')) {
            sectionProducts.classList.remove('active');
            productsList.innerHTML = '';
        }

        clearBtnAllResults();

        renderHistory();
        statusBtnClearSearch();
    }

    function statusBtnClearSearch() {
        btnClearStatus = btnClearStatus ? false : true;
        btnClear.classList.toggle('active');
    }

    btnClear.addEventListener('click', () => clearSearch());


    // status search result wrapper
    function statusSearchResultWrapper() {

        renderHistory();

        searchInput.addEventListener('click', () => {
            if (!searchResultsWrapper.classList.contains('active')) {
                searchResultsWrapper.classList.add('active');
            }
        })

        window.addEventListener('click', element => {
            if (searchResultsWrapper.classList.contains('active') && element.target.className != 'widget-search' && !element.target.closest('.widget-search')) {
                searchResultsWrapper.classList.remove('active');
            }
        });
    }

    statusSearchResultWrapper();

    // ОТПРАВКА ЗАПРОСА ПОИСКА
    function onSendSearch() {
        axios.post('/search/widget/', {
            query: queryValid()
        }).then(response => {
            renderResults(response.data.response);
        })
    }


    // РЕНДЕР РЕЗУЛЬТАТОВ ПОИСКА

    function renderHistory() {

        let history = getHistorySearch(),
            historyListTemp = '',
            i = 0;

        if (history && history.length) {

            history.forEach(e => {

                historyListTemp += `<div><a href="${e.href}">${e.name}</a></div>`;

                i++;

                if (i == history.length && historyListTemp.length) {
                    historyList.innerHTML = historyListTemp;
                    sectionHistory.classList.add('active');
                }
            })
        }
    }

    function renderResults(searchResult) {


        // категории
        function renderCategories(categoriesResult) {

            let categories = '',
                words = ['товар', 'товара', 'товаров'],
                i = 0;

            categoriesResult.forEach(category => {
                if (category.products_count > 0) {
                    categories += `<div data-href='/catalog/${category.id}'><span data-level="${category.level}">${category.name}</span> <span data-level="${category.parent_level}">${category.parent_name}</span> <span>${category.products_count} ${endingWord(words, category.products_count)}</span></div>`;
                }

                i++;

                if (i == categoriesResult.length && categories.length) {
                    categoriesList.innerHTML = categories;
                    sectionCategories.classList.add('active');
                }
            })
        }

        // товары
        function renderProducts(productsResult) {

            let products = '',
                i = 0;

            productsResult.forEach(product => {
                products += `<div data-href='/catalog/product/${product.id}'><img src="${product.image}"><span>${product.name}</span></div>`;

                i++;

                if (i == productsResult.length && products.length) {
                    productsList.innerHTML = products;
                    sectionProducts.classList.add('active');
                }
            })
        }

        function allResults(searchResult) {

            clearBtnAllResults();

            if (!searchResult) {
                return
            }

            let countCategories = searchResult.count_categories,
                countProducts = searchResult.count_products

            if (countCategories) {
                countCategoriesAllResults.querySelector('span').textContent = countCategories;
                countCategoriesAllResults.classList.add('active');
            }

            if (countProducts) {
                countProductsAllResults.querySelector('span').textContent = countProducts;
                countProductsAllResults.classList.add('active');
            }

            if (countCategories || countProducts) {
                sectionAllResults.classList.add('active');
            }
        }


        if (searchResult && searchResult.categories.length) {
            renderCategories(searchResult.categories)
        } else {
            categoriesList.innerHTML = '';
            sectionCategories.classList.remove('active');
        }

        if (searchResult && searchResult.products.length) {
            renderProducts(searchResult.products)
        } else {
            productsList.innerHTML = '';
            sectionProducts.classList.remove('active');
        }

        allResults(searchResult);

        // скрыть секцию История
        sectionHistory.classList.remove('active');

        clickResultSearch();
    }


    // СЛЕЖЕНИЕ ЗА ИЗМЕНЕНИЯМИ ПОЛЯ ПОИСКА
    let sendFormSearch = null;

    // ввод
    searchInput.addEventListener('input', function () {

        // отправка запроса если есть изменения в поле поиска
        if (this.value.length > 0) {
            if (sendFormSearch) {
                clearTimeout(sendFormSearch);
            }
            sendFormSearch = setTimeout(onSendSearch, 1000);
        } else {
            clearSearch();
        }

        // статус кнопки очистить поиск
        if (this.value.length > 0 && !btnClearStatus) statusBtnClearSearch();
    });


    //ПЕРЕХОДЫ

    // нажатие Enter
    searchInput.addEventListener("keypress", function (event) {
        if (event.key === "Enter") {

            let href = '/search/?q=' + queryValid().replace(' ', '+'),
                name = queryValid(),
                resultData = { name: name, href: href };

            addHistorySearch(resultData);

            event.preventDefault();

            btnsSearch.forEach(btn => btn.click())
        }
    });

    // на страницу поиска по нажатию кнопки найти
    btnsSearch.forEach(btn => btn.addEventListener('click', () => window.location = '/search?q=' + queryValid()))

    // переход на результат поиска
    function clickResultSearch() {

        let categories = categoriesList.querySelectorAll('div'),
            products = productsList.querySelectorAll('div'),
            searchResults = [...categories, ...products];

        searchResults.forEach(result => {
            result.addEventListener('click', () => {

                let href = result.getAttribute('data-href'),
                    name = result.querySelector('span').textContent,
                    resultData = { name: name, href: href };

                addHistorySearch(resultData);
            })
        })
    }


    // ИСТОРИЯ ПОИСКА

    // получение истории
    // @return array
    function getHistorySearch() {
        let historySearch = JSON.parse(localStorage.getItem(localStorageName));
        return historySearch;
    }


    // добавить
    function addHistorySearch(value) {

        let historySearch = getHistorySearch();

        if (historySearch && historySearch.length) {

            let add = true;

            historySearch.forEach(result => {
                if (result.href == value.href) add = false
            })

            // удалить старое значение если история переполнилась
            if (historySearch.length == 3) historySearch.splice(0, 1);

            // добавить значение в историю
            add && localStorage.setItem(localStorageName, JSON.stringify([...historySearch, value]));

            // переадресовать на страницу результата
            window.location = value.href;

        } else {
            localStorage.setItem(localStorageName, JSON.stringify([value]));
            window.location = value.href;
        }
    }

    // очистка истории поиска
    function clearHistorySearch() {
        let btnClear = sectionHistory.querySelector('.widget-search-results_history-btn-clear');

        btnClear.addEventListener('click', () => {
            if (getHistorySearch()) {
                sectionHistory.classList.remove('active');
                localStorage.removeItem(localStorageName)
            };
        });
    }

    clearHistorySearch();


    // МОБИЛЬНЫЙ ПОИСК
    function statusMobileSearch() {
        let btnsStatusSearch = document.querySelectorAll('.btn-state-search');

        if (btnsStatusSearch) {
            btnsStatusSearch.forEach(btn => {
                btn.addEventListener('click', () => document.body.classList.toggle('search-active'));
            })
        }
    }

    statusMobileSearch();
});